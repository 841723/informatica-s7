// 4.24.0 0x8e0cab7b
// Generated by imageconverter. Please, do not edit!

#include <images/BitmapDatabase.hpp>
#include <touchgfx/Bitmap.hpp>

extern const unsigned char image_bg[]; // BITMAP_BG_ID = 0, Size: 480x272 pixels
extern const unsigned char image_image00[]; // BITMAP_IMAGE00_ID = 1, Size: 200x200 pixels
extern const unsigned char image_image01_large[]; // BITMAP_IMAGE01_LARGE_ID = 2, Size: 200x200 pixels
extern const unsigned char image_image01_small[]; // BITMAP_IMAGE01_SMALL_ID = 3, Size: 100x100 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] = {
    { image_bg, 0, 480, 272, 0, 0, 480, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 272, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_image00, 0, 200, 200, 0, 0, 200, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 200, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_image01_large, 0, 200, 200, 0, 0, 200, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 200, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 },
    { image_image01_small, 0, 100, 100, 0, 0, 100, ((uint8_t)touchgfx::Bitmap::RGB565) >> 3, 100, ((uint8_t)touchgfx::Bitmap::RGB565) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
} // namespace BitmapDatabase
